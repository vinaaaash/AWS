Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "GitHub Details"
        Parameters:
          - pGitHubAccount
          - pGitHubRepo
          - pGitHubRepoBranch   
          - pGitHubOAuthToken
          - pAppId 
          - pEnv   
          - pNotify 
          - pOrderNum
          - pOwner
          - pCompliance

    ParameterLabels:
      pGitHubAccount: { default: "GitHub Account" }
      pGitHubRepo: { default: "Repository Name" }
      pGitHubRepoBranch: { default: "Repository Branch" }               
      pGitHubOAuthToken: { default: "GitHub OAuth Token" }
      pEnv: { default: " environment" }
      pAppId: { default: "PGE App ID from AMPS" }
      pNotify: { default: "PGE notification email" }
      pOrderNum: { default: "PGE associated order number" }
      pOwner: { default: "PGE asset owner - LanID" }
      pCompliance: {default: "PGE Compliance Mandate" }
Parameters:
  pGitHubAccount:
    Type: 'String'
    Default: 'pgetech'
    Description: "Enter the GitHub Account Name (e.g. pgetech)"
  pGitHubRepo:
    Type: 'String'
    Description: "Enter the GitHub Repo Name "
    Default: 'ccsp-cdp-aws-infrastructure'
  pGitHubRepoBranch:
    Type: 'String'
    Default: 'dev'
    Description: "Enter the Branch you wish to pull from in the GitHub repo"
  pGitHubOAuthToken:
    Type: 'String'
    Description: "GitHub token from secrets manager"
    Default: 'ccsp/github/pat:SecretString:GitHubPersonalAccessToken'
  pAccountID:
    Type: 'String'
    Description: "Aws AccountiID" 
    Default: '846113385035'
  pEnv:
    Type: 'String'
    Description: "The environment: Dev, Test, QA, Prod"
    Default: 'Dev'
  pService:
    Type: String
    Default: gg
    Description: "The stackset name"
    AllowedValues:
      - gg
      - acm
  pNamePrefix:
    Type: 'String'
    Description: "Prefix for pipeline name"
    Default: 'ccsp-cdp' 
  pS3KMSArn:
    Description: "ARN of S3 Service CMK"
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /servicekey/s3
  pAppId:
    Description: "AMPS Id"
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /general/appid
  pNotify:
    Description: "Notification for backup vault creation failure & maintenance"
    Type: String
    Default: "m2ru@pge.com"
  pOrderNum:
    Description: "Capital Order Number"
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /general/order
  pOwner:
    Description: "System or Asset Owner"
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /general/owner
  pCompliance:
    Description: "PGE Data Classification"
    Type: String
    Default: "Sox"
    AllowedValues:
      - Sox
      - NERC
      - PII
      - CCPA
  pDataClassification:
    Description: "PGE Data Classification"
    Type: String
    Default: "Internal"
    AllowedValues:
      - Public
      - Internal
      - Confidential
      - Restricted
      - Privileged
  pCrisScore:
    Description: "Cyber Risk Impact Score (CRIS)"
    AllowedValues:
      - "Low"
      - "Medium"
      - "High"
    Type: String
    Default: "Medium"
  pDeployNotification:
    Type: 'String'
    Description: "Prefix for pipeline name"
    Default: 'arn:aws:sns:us-west-2:720720378559:ccsp-rds-test-rDeployNotification-XCQ5T9BYYFIV' 
Resources:
  # create project for populating source
  rPipelineEvents:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: EventRule
      EventPattern:
        source:
          - aws.codepipeline
        detail-type:
          - CodePipeline Pipeline Execution State Change
        detail:
          state:
            - FAILED
          pipeline:
            - !Ref rCodePipeline
      State: ENABLED
      Targets:
        - Arn: !Ref pDeployNotification
          Id: DeployPipeline
  rDeployNotificationPolicy:
    Type: 'AWS::SNS::TopicPolicy'
    Properties:
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: 'sns:Publish'
            Resource: '*'
      Topics:
        - !Ref pDeployNotification
  rArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: Private
      BucketName: !Sub ${AWS::StackName}-${pGitHubRepoBranch}-artifacts
      PublicAccessBlockConfiguration:
        BlockPublicAcls : True
        BlockPublicPolicy : True
        IgnorePublicAcls : True
        RestrictPublicBuckets : True
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'aws:kms'
              KMSMasterKeyID: !Ref pS3KMSArn   
      Tags:
        - Key: "Owner"
          Value: !Ref pOwner
        - Key: "Notify"
          Value: !Ref pNotify
        - Key: "AppID"
          Value: !Ref pAppId
        - Key: DataClassification
          Value: !Ref pDataClassification
        - Key: Compliance
          Value: !Ref pCompliance
        - Key: CRIS
          Value: !Ref pCrisScore     
  rBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref rArtifactBucket
      PolicyDocument:
        Statement:
          - Action:
              - 's3:List*'
              - 's3:Get*'
              - 's3:Put*'
            Effect: Allow
            Resource:
              - !Sub "arn:aws:s3:::${rArtifactBucket}"
              - !Sub "arn:aws:s3:::${rArtifactBucket}/*"
            Principal:
              Service:
                - codebuild.amazonaws.com
                - codedeploy.amazonaws.com
          - Action: "*"
            Effect: Deny
            Resource:
              - !Sub "arn:aws:s3:::${rArtifactBucket}"
            Principal: "*"
            Condition:
              Bool:
                aws:SecureTransport: "false"

  rCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: {Service: [codepipeline.amazonaws.com]}
            Action: "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: "rCodePipelinePolicy"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - codebuild:*
                  - iam:PassRole   
                Resource: 
                  - !Sub arn:aws:s3:::${rArtifactBucket}/*
                  - !GetAtt rCodeBuildProject.Arn
              - Effect: Allow
                Action:
                  - logs:DescribeLogGroups
                  - logs:CreateLogGroup
                  - logs:GetLogEvents
                  - logs:CreateLogStream
                  - logs:FilterLogEvents
                  - logs:PutLogEvents
                  - s3:PutObject
                  - cloudformation:*
                  - sns:*
                Resource: 
                  - '*'
      Tags:
        - Key: "Owner"
          Value: !Ref pOwner
        - Key: "Notify"
          Value: !Ref pNotify
        - Key: "AppID"
          Value: !Ref pAppId
        - Key: DataClassification
          Value: !Ref pDataClassification
        - Key: Compliance
          Value: !Ref pCompliance
        - Key: CRIS
          Value: !Ref pCrisScore  
  rCodeBuildProjectRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: {Service: [codebuild.amazonaws.com]}
            Action: "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: "rCodeBuildProjectPolicy"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - codebuild:*
                  - sns:*
                Resource: 
                  - !Sub arn:aws:s3:::${rArtifactBucket}/*
                  - arn:aws:codebuild:::*
              - Effect: Allow
                Action:
                  - cloudformation:*
                  - logs:DescribeLogGroups
                  - logs:CreateLogGroup
                  - logs:GetLogEvents
                  - logs:CreateLogStream
                  - logs:FilterLogEvents
                  - logs:PutLogEvents
                  - s3:PutObject
                Resource: 
                  - '*'
      Tags:
        - Key: "Owner"
          Value: !Ref pOwner
        - Key: "Notify"
          Value: !Ref pNotify
        - Key: "AppID"
          Value: !Ref pAppId
        - Key: DataClassification
          Value: !Ref pDataClassification
        - Key: Compliance
          Value: !Ref pCompliance
        - Key: CRIS
          Value: !Ref pCrisScore  
  rCodeBuildProject:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub '${pNamePrefix}-${pService}-${pEnv}-buildproject'
      ServiceRole: !Ref rCodeBuildProjectRole
      BadgeEnabled: False
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        PrivilegedMode: False
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: SRVC_DIR
            Value: !Sub '${pService}'
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub 'buildspec.yml'
      TimeoutInMinutes: 15
      Cache:
        Type: NO_CACHE
      Tags:
        - Key: "Owner"
          Value: !Ref pOwner
        - Key: "Notify"
          Value: !Ref pNotify
        - Key: "AppID"
          Value: !Ref pAppId
        - Key: DataClassification
          Value: !Ref pDataClassification
        - Key: Compliance
          Value: !Ref pCompliance
        - Key: CRIS
          Value: !Ref pCrisScore  

  rCodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Sub '${pNamePrefix}-${pService}-${pEnv}-codepipeline'
      RoleArn: !GetAtt rCodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref rArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                Owner: !Ref pGitHubAccount
                Repo: !Ref pGitHubRepo
                PollForSourceChanges: true
                Branch: !Ref pGitHubRepoBranch
                OAuthToken: !Join [ "", ["{{resolve:secretsmanager:", !Ref pGitHubOAuthToken, "}}"] ]
              RunOrder: 1        
        - Name: Build
          Actions:
            - Name: CodeBuild
              InputArtifacts:
                - Name: SourceArtifact            
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref rCodeBuildProject
              RunOrder: 1
 
        - Name: ManualApproval
          Actions:
            - Name: ManualApproval      
              ActionTypeId: 
                Category: Approval
                Owner: AWS 
                Version: '1' 
                Provider: Manual
              Configuration:
                NotificationArn: !Ref pDeployNotification
                CustomData: "Deploy stacksets "
              RunOrder: 2 
        - Name: DeployACMCertificate                       
          Actions:
            - Name: DeployStacksSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormationStackSet
                Version: 1
              RunOrder: 1
              Configuration:
                DeploymentTargets: !Sub '${pAccountID}'
                FailureTolerancePercentage: '20'
                MaxConcurrentPercentage: '25'
                PermissionModel: SELF_MANAGED
                Capabilities: CAPABILITY_NAMED_IAM
                Regions: us-west-2
                StackSetName: !Sub '${pNamePrefix}-${pService}-${pEnv}'
                TemplatePath: !Sub 'BuildArtifact::${pService}/aws-cfn-certificate-shared.yml'
                Parameters: !Sub 'BuildArtifact::${pService}/Parameters-${pEnv}.json'
                ExecutionRoleName: AWSCloudFormationStackSetExecutionRole 
              OutputArtifacts: []
              InputArtifacts:
                - Name: BuildArtifact
              Region: us-west-2
              Namespace: DeployVariables 
      Tags:
        - Key: "Owner"
          Value: !Ref pOwner
        - Key: "Notify"
          Value: !Ref pNotify
        - Key: DataClassification
          Value: !Ref pDataClassification
        - Key: Compliance
          Value: !Ref pCompliance
        - Key: CRIS
          Value: !Ref pCrisScore  }